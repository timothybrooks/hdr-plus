name: BuildAll

on: [push, pull_request]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build_halide:
    runs-on: ubuntu-latest
    env:
      THIRDPARTY_DIR: ${{ github.workspace }}/3rdparty
      HALIDE_BUILD_DIR: ${{github.workspace}}/3rdparty/Halide-master/build
      HALIDE_INSTALL_DIR: ${{github.workspace}}/3rdparty/Halide-master/install
    steps:
      - uses: actions/checkout@v1

      - name: Download Halide
        run: |
          mkdir -p ${THIRDPARTY_DIR} && cd ${THIRDPARTY_DIR}
          wget https://github.com/halide/Halide/archive/master.zip
          unzip -o master.zip

      - name: Build Halide
        working-directory: ${{ github.workspace }}/3rdparty
        compiler: clang
        run: |
          mkdir -p ${HALIDE_BUILD_DIR} && cd ${HALIDE_BUILD_DIR} 

          cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${HALIDE_INSTALL_DIR} \
              -DWITH_TESTS=OFF -DWITH_APPS=OFF -DWITH_TUTORIALS=OFF \
              -DWITH_ARM=OFF -DWITH_AARCH64=OFF -DWITH_HEXAGON=OFF -DWITH_MIPS=OFF -DWITH_POWERPC=OFF -DWITH_NVPTX=OFF -DWITH_RISCV=OFF \
              ..
          make -j 8 install

      - name: Upload Install Directory
        uses: actions/upload-artifact@v1
        with:
          name: halide-install
          path: ${{ github.workspace }}/3rdparty/Halide-master/install/

  build_all:
    needs: build_halide
    runs-on: ubuntu-latest
    env:
      BUILD_DIR: ${{github.workspace}}/build
      HALIDE_DISTRIB_DIR: ${{github.workspace}}/3rdparty/Halide
      
    steps:
      - uses: actions/checkout@v1

      - name: Download Halide
        uses: actions/download-artifact@v1
        with:
          name: halide-install
          path: ${{github.workspace}}/3rdparty/Halide

      - name: List 3rdparty
        run: |
          ls -lha ${{github.workspace}}/3rdparty
          ls -lha ${HALIDE_DISTRIB_DIR}

      - name: Install Dependencies
        run: sudo apt update && sudo apt install -y libtiff-dev libraw-dev libpng-dev libjpeg-dev zlib1g-dev

      - name: Configure CMake
        shell: bash
        working-directory: ${{github.workspace}}
        run: |
          mkdir -p ${BUILD_DIR} && cd ${BUILD_DIR}
          cmake -DHALIDE_DISTRIB_DIR=${HALIDE_DISTRIB_DIR} -DCMAKE_BUILD_TYPE=$BUILD_TYPE ..

      - name: Build
        shell: bash
        working-directory: ${{github.workspace}}
        run: cd ${BUILD_DIR} && make -j 8 all

#      - name: Test
#        working-directory: ${{runner.workspace}}/build
#        shell: bash
#        # Execute tests defined by the CMake configuration.  
#        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
#        run: ctest -C $BUILD_TYPE
